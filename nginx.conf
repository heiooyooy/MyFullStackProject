# nginx.conf

server {
    listen 80;
    server_name localhost;

    # ----------------------------------------------------------------------
    # 规则 1: 转发所有 API 请求到后端服务
    # 所有发往 http://localhost/api/ 的请求都会被转发到后端 .NET 服务
    # ----------------------------------------------------------------------
    location /api/ {
        # 重写 URL，去掉 /api 前缀，后端服务无需关心这个前缀
        # rewrite ^/api/(.*)$ /$1 break;
        
        # 转发到后端服务的容器名和内部端口
        proxy_pass http://my-backend-server:5000;
        
        # 设置必要的请求头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /analyticsHub {
        # 转发到你的 SignalR 微服务的容器名和内部端口
        proxy_pass http://my-kafka-worker-service:5001;

        # --- 开启 WebSocket 代理支持 (关键！) ---
        
        # 1. 设置 HTTP 协议版本为 1.1，这是 WebSocket 的要求
        proxy_http_version 1.1;

        # 2. 设置 Upgrade 请求头
        proxy_set_header Upgrade $http_upgrade;

        # 3. 设置 Connection 请求头为 "upgrade"
        proxy_set_header Connection "upgrade";

        # --- 其他通用设置 ---
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 增加超时时间，防止长连接被过早断开
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ----------------------------------------------------------------------
    # 规则 2: 转发到其他管理 UI (可选)
    # 示例：通过 http://localhost/kafka-ui/ 访问 Kafka UI
    # ----------------------------------------------------------------------
    location /kafka-ui/ {
        # 由于 kafka-ui 已经设置了 context path 为 /kafka-ui，
        # 我们需要重写 URL 去掉前缀，然后转发到根路径
        proxy_pass http://kafka-ui:8080/kafka-ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ----------------------------------------------------------------------
    # 规则 3: 其他所有请求都转发到前端 React 应用
    # 这是默认规则，必须放在最后
    # ----------------------------------------------------------------------
    location / {
        # 转发到前端服务的容器名和内部端口
        proxy_pass http://my-react-app:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /seq/ {
        rewrite ^/seq/(.*)$ /$1 break;
        proxy_pass http://seq:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}